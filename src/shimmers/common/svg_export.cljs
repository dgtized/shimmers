(ns shimmers.common.svg-export
  "Convert a generated SVG into a file for download using an image data url")

(def svg-header
  "<?xml version=\"1.0\" standalone=\"no\"?>
<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"
  \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">
")

;; cribbed from http://bl.ocks.org/curran/7cf9967028259ea032e8
(defn as-file [svg comment]
  (let [svg-as-xml (.serializeToString (js/XMLSerializer.) svg)
        data-url (str "data:image/svg+xml,"
                      (js/encodeURIComponent svg-header)
                      (js/encodeURIComponent (str "<!--\n" comment "-->\n"))
                      (js/encodeURIComponent svg-as-xml))]
    data-url))

(defn download-svg [id filename comment]
  (let [el (.getElementById js/document id)
        data-url (as-file el comment)
        link (.createElement js/document "a")]
    (.appendChild (.-body js/document) link)
    (.setAttribute link "href" data-url)
    (.setAttribute link "download" filename)
    (.click link)))

(defn seed []
  ;; FIXME: grab meta info from sketch info instead of parsing from URL?
  (let [href (.-href (.-location js/window))]
    (when-let [m (re-find #"\?seed=(\d+)" href)]
      (second m))))

(defn download [id filename]
  (let [href (.-href (.-location js/window))
        comment (str "Generated By: " href "\n"
                     "At: " (.toUTCString (js/Date.)) "\n")
        ;; TODO: include git sha in filename or comment?
        ;; TODO: ensure url uses public url instead of localhost + deal with sha
        filename (str filename "-" (seed) ".svg")
        action (download-svg id filename comment)
        ;; button (fn [] (.log js/console filename "\n" comment))
        ]
    action))

(defn button [id filename]
  [:input {:type "button" :value "Download" :on-click #(download id filename)}])
